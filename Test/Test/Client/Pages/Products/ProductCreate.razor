@page "/products/create/"
@inject HttpClient _client
@inject NavigationManager _navManager


<h3 class="card-title">Add New product</h3>
<hr />
<br />

<EditForm Model="@product" OnValidSubmit="CreateProduct">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Name: </label>
        <div>
            <InputText @bind-Value="@product.Name" class="form-control" />
            <ValidationMessage For="@(() => product.Name)" />
        </div>
    </div>

    <div class="form-group">
        <label>Manufacturer: </label>
        <div>
            <InputText @bind-Value="@product.Manufacturer" class="form-control" />
            <ValidationMessage For="@(() => product.Manufacturer)" />
        </div>
    </div>

    <div class="form-group">
        <label>Price: </label>
        <div>
            <InputNumber @bind-Value="@product.Price" class="form-control" />
            <ValidationMessage For="@(() => product.Price)" />
        </div>
    </div>

    <div class="form-group">
        <label>Type: </label>
        <div>
            <InputSelect @bind-Value="@product.Type" class="form-control">
                <option value=""> Select Type </option>
                @foreach (var type in med_type)
                {
                    <option value="@type">@type</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => product.Category)" />
        </div>
    </div>

    <div class="form-group">
        <label>Category: </label>
        <div>
            <InputSelect @bind-Value="@product.Category" class="form-control">
                <option value=""> Select Category </option>
                @foreach (var category in med_category)
                {
                    <option value="@category">@category</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => product.Category)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Product
    </button>

    <Test.Client.Components.BackToList Target="products" />

</EditForm>

@code {
    Product product = new Product();

    string[] med_type = new string[] { "Syrup", "Tablet", "Capsules", "Drops", "Others" };
    string[] med_category = new string[] { "Fever", "Cough", "Flu", "Others" };

    private async Task CreateProduct()
    {
        await _client.PostAsJsonAsync(Endpoint.ProductsEndpoint, product);
        _navManager.NavigateTo("/products/");
    }

}

